// source: Task.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.com.bzl.bis.task.CommonResult', null, global);
goog.exportSymbol('proto.com.bzl.bis.task.DeleteTaskIdReq', null, global);
goog.exportSymbol('proto.com.bzl.bis.task.GetTaskDetailByIdReq', null, global);
goog.exportSymbol('proto.com.bzl.bis.task.GetTaskDetailByIdResp', null, global);
goog.exportSymbol('proto.com.bzl.bis.task.ListTaskReq', null, global);
goog.exportSymbol('proto.com.bzl.bis.task.ListTaskResp', null, global);
goog.exportSymbol('proto.com.bzl.bis.task.PageData', null, global);
goog.exportSymbol('proto.com.bzl.bis.task.TaskDTO', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bzl.bis.task.TaskDTO = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bzl.bis.task.TaskDTO, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bzl.bis.task.TaskDTO.displayName = 'proto.com.bzl.bis.task.TaskDTO';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bzl.bis.task.ListTaskReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bzl.bis.task.ListTaskReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bzl.bis.task.ListTaskReq.displayName = 'proto.com.bzl.bis.task.ListTaskReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bzl.bis.task.ListTaskResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.bzl.bis.task.ListTaskResp.repeatedFields_, null);
};
goog.inherits(proto.com.bzl.bis.task.ListTaskResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bzl.bis.task.ListTaskResp.displayName = 'proto.com.bzl.bis.task.ListTaskResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bzl.bis.task.GetTaskDetailByIdReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bzl.bis.task.GetTaskDetailByIdReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bzl.bis.task.GetTaskDetailByIdReq.displayName = 'proto.com.bzl.bis.task.GetTaskDetailByIdReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bzl.bis.task.GetTaskDetailByIdResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bzl.bis.task.GetTaskDetailByIdResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bzl.bis.task.GetTaskDetailByIdResp.displayName = 'proto.com.bzl.bis.task.GetTaskDetailByIdResp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bzl.bis.task.DeleteTaskIdReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bzl.bis.task.DeleteTaskIdReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bzl.bis.task.DeleteTaskIdReq.displayName = 'proto.com.bzl.bis.task.DeleteTaskIdReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bzl.bis.task.CommonResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bzl.bis.task.CommonResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bzl.bis.task.CommonResult.displayName = 'proto.com.bzl.bis.task.CommonResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.bzl.bis.task.PageData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.bzl.bis.task.PageData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.com.bzl.bis.task.PageData.displayName = 'proto.com.bzl.bis.task.PageData';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bzl.bis.task.TaskDTO.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bzl.bis.task.TaskDTO.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bzl.bis.task.TaskDTO} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bzl.bis.task.TaskDTO.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    taskType: jspb.Message.getFieldWithDefault(msg, 2, ""),
    title: jspb.Message.getFieldWithDefault(msg, 3, ""),
    robotId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    missionId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    state: jspb.Message.getFieldWithDefault(msg, 8, ""),
    createdBy: jspb.Message.getFieldWithDefault(msg, 9, ""),
    createdTime: (f = msg.getCreatedTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedBy: jspb.Message.getFieldWithDefault(msg, 11, ""),
    updatedTime: (f = msg.getUpdatedTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bzl.bis.task.TaskDTO}
 */
proto.com.bzl.bis.task.TaskDTO.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bzl.bis.task.TaskDTO;
  return proto.com.bzl.bis.task.TaskDTO.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bzl.bis.task.TaskDTO} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bzl.bis.task.TaskDTO}
 */
proto.com.bzl.bis.task.TaskDTO.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaskType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRobotId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMissionId(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedBy(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedTime(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedBy(value);
      break;
    case 12:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bzl.bis.task.TaskDTO.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bzl.bis.task.TaskDTO.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bzl.bis.task.TaskDTO} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bzl.bis.task.TaskDTO.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTaskType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRobotId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getMissionId();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCreatedBy();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCreatedTime();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedBy();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getUpdatedTime();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.com.bzl.bis.task.TaskDTO.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bzl.bis.task.TaskDTO} returns this
 */
proto.com.bzl.bis.task.TaskDTO.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string task_type = 2;
 * @return {string}
 */
proto.com.bzl.bis.task.TaskDTO.prototype.getTaskType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bzl.bis.task.TaskDTO} returns this
 */
proto.com.bzl.bis.task.TaskDTO.prototype.setTaskType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string title = 3;
 * @return {string}
 */
proto.com.bzl.bis.task.TaskDTO.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bzl.bis.task.TaskDTO} returns this
 */
proto.com.bzl.bis.task.TaskDTO.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 robot_id = 4;
 * @return {number}
 */
proto.com.bzl.bis.task.TaskDTO.prototype.getRobotId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bzl.bis.task.TaskDTO} returns this
 */
proto.com.bzl.bis.task.TaskDTO.prototype.setRobotId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 mission_id = 5;
 * @return {number}
 */
proto.com.bzl.bis.task.TaskDTO.prototype.getMissionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bzl.bis.task.TaskDTO} returns this
 */
proto.com.bzl.bis.task.TaskDTO.prototype.setMissionId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp start_time = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.com.bzl.bis.task.TaskDTO.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.com.bzl.bis.task.TaskDTO} returns this
*/
proto.com.bzl.bis.task.TaskDTO.prototype.setStartTime = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.bzl.bis.task.TaskDTO} returns this
 */
proto.com.bzl.bis.task.TaskDTO.prototype.clearStartTime = function() {
  return this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.bzl.bis.task.TaskDTO.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.com.bzl.bis.task.TaskDTO.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.com.bzl.bis.task.TaskDTO} returns this
*/
proto.com.bzl.bis.task.TaskDTO.prototype.setEndTime = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.bzl.bis.task.TaskDTO} returns this
 */
proto.com.bzl.bis.task.TaskDTO.prototype.clearEndTime = function() {
  return this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.bzl.bis.task.TaskDTO.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string state = 8;
 * @return {string}
 */
proto.com.bzl.bis.task.TaskDTO.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bzl.bis.task.TaskDTO} returns this
 */
proto.com.bzl.bis.task.TaskDTO.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string created_by = 9;
 * @return {string}
 */
proto.com.bzl.bis.task.TaskDTO.prototype.getCreatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bzl.bis.task.TaskDTO} returns this
 */
proto.com.bzl.bis.task.TaskDTO.prototype.setCreatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional google.protobuf.Timestamp created_time = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.com.bzl.bis.task.TaskDTO.prototype.getCreatedTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.com.bzl.bis.task.TaskDTO} returns this
*/
proto.com.bzl.bis.task.TaskDTO.prototype.setCreatedTime = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.bzl.bis.task.TaskDTO} returns this
 */
proto.com.bzl.bis.task.TaskDTO.prototype.clearCreatedTime = function() {
  return this.setCreatedTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.bzl.bis.task.TaskDTO.prototype.hasCreatedTime = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string updated_by = 11;
 * @return {string}
 */
proto.com.bzl.bis.task.TaskDTO.prototype.getUpdatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bzl.bis.task.TaskDTO} returns this
 */
proto.com.bzl.bis.task.TaskDTO.prototype.setUpdatedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional google.protobuf.Timestamp updated_time = 12;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.com.bzl.bis.task.TaskDTO.prototype.getUpdatedTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 12));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.com.bzl.bis.task.TaskDTO} returns this
*/
proto.com.bzl.bis.task.TaskDTO.prototype.setUpdatedTime = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.bzl.bis.task.TaskDTO} returns this
 */
proto.com.bzl.bis.task.TaskDTO.prototype.clearUpdatedTime = function() {
  return this.setUpdatedTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.bzl.bis.task.TaskDTO.prototype.hasUpdatedTime = function() {
  return jspb.Message.getField(this, 12) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bzl.bis.task.ListTaskReq.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bzl.bis.task.ListTaskReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bzl.bis.task.ListTaskReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bzl.bis.task.ListTaskReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageNo: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 2, 0),
    taskType: jspb.Message.getFieldWithDefault(msg, 3, ""),
    robotId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    state: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bzl.bis.task.ListTaskReq}
 */
proto.com.bzl.bis.task.ListTaskReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bzl.bis.task.ListTaskReq;
  return proto.com.bzl.bis.task.ListTaskReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bzl.bis.task.ListTaskReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bzl.bis.task.ListTaskReq}
 */
proto.com.bzl.bis.task.ListTaskReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPageNo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPageSize(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaskType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRobotId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bzl.bis.task.ListTaskReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bzl.bis.task.ListTaskReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bzl.bis.task.ListTaskReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bzl.bis.task.ListTaskReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageNo();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getTaskType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRobotId();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional uint64 page_no = 1;
 * @return {number}
 */
proto.com.bzl.bis.task.ListTaskReq.prototype.getPageNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bzl.bis.task.ListTaskReq} returns this
 */
proto.com.bzl.bis.task.ListTaskReq.prototype.setPageNo = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 page_size = 2;
 * @return {number}
 */
proto.com.bzl.bis.task.ListTaskReq.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bzl.bis.task.ListTaskReq} returns this
 */
proto.com.bzl.bis.task.ListTaskReq.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string task_type = 3;
 * @return {string}
 */
proto.com.bzl.bis.task.ListTaskReq.prototype.getTaskType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bzl.bis.task.ListTaskReq} returns this
 */
proto.com.bzl.bis.task.ListTaskReq.prototype.setTaskType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 robot_id = 4;
 * @return {number}
 */
proto.com.bzl.bis.task.ListTaskReq.prototype.getRobotId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bzl.bis.task.ListTaskReq} returns this
 */
proto.com.bzl.bis.task.ListTaskReq.prototype.setRobotId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string state = 5;
 * @return {string}
 */
proto.com.bzl.bis.task.ListTaskReq.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bzl.bis.task.ListTaskReq} returns this
 */
proto.com.bzl.bis.task.ListTaskReq.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.bzl.bis.task.ListTaskResp.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bzl.bis.task.ListTaskResp.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bzl.bis.task.ListTaskResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bzl.bis.task.ListTaskResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bzl.bis.task.ListTaskResp.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonResult: (f = msg.getCommonResult()) && proto.com.bzl.bis.task.CommonResult.toObject(includeInstance, f),
    pageData: (f = msg.getPageData()) && proto.com.bzl.bis.task.PageData.toObject(includeInstance, f),
    rowsList: jspb.Message.toObjectList(msg.getRowsList(),
    proto.com.bzl.bis.task.TaskDTO.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bzl.bis.task.ListTaskResp}
 */
proto.com.bzl.bis.task.ListTaskResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bzl.bis.task.ListTaskResp;
  return proto.com.bzl.bis.task.ListTaskResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bzl.bis.task.ListTaskResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bzl.bis.task.ListTaskResp}
 */
proto.com.bzl.bis.task.ListTaskResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.bzl.bis.task.CommonResult;
      reader.readMessage(value,proto.com.bzl.bis.task.CommonResult.deserializeBinaryFromReader);
      msg.setCommonResult(value);
      break;
    case 2:
      var value = new proto.com.bzl.bis.task.PageData;
      reader.readMessage(value,proto.com.bzl.bis.task.PageData.deserializeBinaryFromReader);
      msg.setPageData(value);
      break;
    case 3:
      var value = new proto.com.bzl.bis.task.TaskDTO;
      reader.readMessage(value,proto.com.bzl.bis.task.TaskDTO.deserializeBinaryFromReader);
      msg.addRows(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bzl.bis.task.ListTaskResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bzl.bis.task.ListTaskResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bzl.bis.task.ListTaskResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bzl.bis.task.ListTaskResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.com.bzl.bis.task.CommonResult.serializeBinaryToWriter
    );
  }
  f = message.getPageData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.com.bzl.bis.task.PageData.serializeBinaryToWriter
    );
  }
  f = message.getRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.com.bzl.bis.task.TaskDTO.serializeBinaryToWriter
    );
  }
};


/**
 * optional CommonResult common_result = 1;
 * @return {?proto.com.bzl.bis.task.CommonResult}
 */
proto.com.bzl.bis.task.ListTaskResp.prototype.getCommonResult = function() {
  return /** @type{?proto.com.bzl.bis.task.CommonResult} */ (
    jspb.Message.getWrapperField(this, proto.com.bzl.bis.task.CommonResult, 1));
};


/**
 * @param {?proto.com.bzl.bis.task.CommonResult|undefined} value
 * @return {!proto.com.bzl.bis.task.ListTaskResp} returns this
*/
proto.com.bzl.bis.task.ListTaskResp.prototype.setCommonResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.bzl.bis.task.ListTaskResp} returns this
 */
proto.com.bzl.bis.task.ListTaskResp.prototype.clearCommonResult = function() {
  return this.setCommonResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.bzl.bis.task.ListTaskResp.prototype.hasCommonResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PageData page_data = 2;
 * @return {?proto.com.bzl.bis.task.PageData}
 */
proto.com.bzl.bis.task.ListTaskResp.prototype.getPageData = function() {
  return /** @type{?proto.com.bzl.bis.task.PageData} */ (
    jspb.Message.getWrapperField(this, proto.com.bzl.bis.task.PageData, 2));
};


/**
 * @param {?proto.com.bzl.bis.task.PageData|undefined} value
 * @return {!proto.com.bzl.bis.task.ListTaskResp} returns this
*/
proto.com.bzl.bis.task.ListTaskResp.prototype.setPageData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.bzl.bis.task.ListTaskResp} returns this
 */
proto.com.bzl.bis.task.ListTaskResp.prototype.clearPageData = function() {
  return this.setPageData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.bzl.bis.task.ListTaskResp.prototype.hasPageData = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated TaskDTO rows = 3;
 * @return {!Array<!proto.com.bzl.bis.task.TaskDTO>}
 */
proto.com.bzl.bis.task.ListTaskResp.prototype.getRowsList = function() {
  return /** @type{!Array<!proto.com.bzl.bis.task.TaskDTO>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.bzl.bis.task.TaskDTO, 3));
};


/**
 * @param {!Array<!proto.com.bzl.bis.task.TaskDTO>} value
 * @return {!proto.com.bzl.bis.task.ListTaskResp} returns this
*/
proto.com.bzl.bis.task.ListTaskResp.prototype.setRowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.com.bzl.bis.task.TaskDTO=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.bzl.bis.task.TaskDTO}
 */
proto.com.bzl.bis.task.ListTaskResp.prototype.addRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.com.bzl.bis.task.TaskDTO, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.com.bzl.bis.task.ListTaskResp} returns this
 */
proto.com.bzl.bis.task.ListTaskResp.prototype.clearRowsList = function() {
  return this.setRowsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bzl.bis.task.GetTaskDetailByIdReq.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bzl.bis.task.GetTaskDetailByIdReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bzl.bis.task.GetTaskDetailByIdReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bzl.bis.task.GetTaskDetailByIdReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bzl.bis.task.GetTaskDetailByIdReq}
 */
proto.com.bzl.bis.task.GetTaskDetailByIdReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bzl.bis.task.GetTaskDetailByIdReq;
  return proto.com.bzl.bis.task.GetTaskDetailByIdReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bzl.bis.task.GetTaskDetailByIdReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bzl.bis.task.GetTaskDetailByIdReq}
 */
proto.com.bzl.bis.task.GetTaskDetailByIdReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bzl.bis.task.GetTaskDetailByIdReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bzl.bis.task.GetTaskDetailByIdReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bzl.bis.task.GetTaskDetailByIdReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bzl.bis.task.GetTaskDetailByIdReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.com.bzl.bis.task.GetTaskDetailByIdReq.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bzl.bis.task.GetTaskDetailByIdReq} returns this
 */
proto.com.bzl.bis.task.GetTaskDetailByIdReq.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bzl.bis.task.GetTaskDetailByIdResp.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bzl.bis.task.GetTaskDetailByIdResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bzl.bis.task.GetTaskDetailByIdResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bzl.bis.task.GetTaskDetailByIdResp.toObject = function(includeInstance, msg) {
  var f, obj = {
    commonResult: (f = msg.getCommonResult()) && proto.com.bzl.bis.task.CommonResult.toObject(includeInstance, f),
    task: (f = msg.getTask()) && proto.com.bzl.bis.task.TaskDTO.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bzl.bis.task.GetTaskDetailByIdResp}
 */
proto.com.bzl.bis.task.GetTaskDetailByIdResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bzl.bis.task.GetTaskDetailByIdResp;
  return proto.com.bzl.bis.task.GetTaskDetailByIdResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bzl.bis.task.GetTaskDetailByIdResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bzl.bis.task.GetTaskDetailByIdResp}
 */
proto.com.bzl.bis.task.GetTaskDetailByIdResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.bzl.bis.task.CommonResult;
      reader.readMessage(value,proto.com.bzl.bis.task.CommonResult.deserializeBinaryFromReader);
      msg.setCommonResult(value);
      break;
    case 2:
      var value = new proto.com.bzl.bis.task.TaskDTO;
      reader.readMessage(value,proto.com.bzl.bis.task.TaskDTO.deserializeBinaryFromReader);
      msg.setTask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bzl.bis.task.GetTaskDetailByIdResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bzl.bis.task.GetTaskDetailByIdResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bzl.bis.task.GetTaskDetailByIdResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bzl.bis.task.GetTaskDetailByIdResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommonResult();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.com.bzl.bis.task.CommonResult.serializeBinaryToWriter
    );
  }
  f = message.getTask();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.com.bzl.bis.task.TaskDTO.serializeBinaryToWriter
    );
  }
};


/**
 * optional CommonResult common_result = 1;
 * @return {?proto.com.bzl.bis.task.CommonResult}
 */
proto.com.bzl.bis.task.GetTaskDetailByIdResp.prototype.getCommonResult = function() {
  return /** @type{?proto.com.bzl.bis.task.CommonResult} */ (
    jspb.Message.getWrapperField(this, proto.com.bzl.bis.task.CommonResult, 1));
};


/**
 * @param {?proto.com.bzl.bis.task.CommonResult|undefined} value
 * @return {!proto.com.bzl.bis.task.GetTaskDetailByIdResp} returns this
*/
proto.com.bzl.bis.task.GetTaskDetailByIdResp.prototype.setCommonResult = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.bzl.bis.task.GetTaskDetailByIdResp} returns this
 */
proto.com.bzl.bis.task.GetTaskDetailByIdResp.prototype.clearCommonResult = function() {
  return this.setCommonResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.bzl.bis.task.GetTaskDetailByIdResp.prototype.hasCommonResult = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TaskDTO task = 2;
 * @return {?proto.com.bzl.bis.task.TaskDTO}
 */
proto.com.bzl.bis.task.GetTaskDetailByIdResp.prototype.getTask = function() {
  return /** @type{?proto.com.bzl.bis.task.TaskDTO} */ (
    jspb.Message.getWrapperField(this, proto.com.bzl.bis.task.TaskDTO, 2));
};


/**
 * @param {?proto.com.bzl.bis.task.TaskDTO|undefined} value
 * @return {!proto.com.bzl.bis.task.GetTaskDetailByIdResp} returns this
*/
proto.com.bzl.bis.task.GetTaskDetailByIdResp.prototype.setTask = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.com.bzl.bis.task.GetTaskDetailByIdResp} returns this
 */
proto.com.bzl.bis.task.GetTaskDetailByIdResp.prototype.clearTask = function() {
  return this.setTask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.com.bzl.bis.task.GetTaskDetailByIdResp.prototype.hasTask = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bzl.bis.task.DeleteTaskIdReq.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bzl.bis.task.DeleteTaskIdReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bzl.bis.task.DeleteTaskIdReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bzl.bis.task.DeleteTaskIdReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bzl.bis.task.DeleteTaskIdReq}
 */
proto.com.bzl.bis.task.DeleteTaskIdReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bzl.bis.task.DeleteTaskIdReq;
  return proto.com.bzl.bis.task.DeleteTaskIdReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bzl.bis.task.DeleteTaskIdReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bzl.bis.task.DeleteTaskIdReq}
 */
proto.com.bzl.bis.task.DeleteTaskIdReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bzl.bis.task.DeleteTaskIdReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bzl.bis.task.DeleteTaskIdReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bzl.bis.task.DeleteTaskIdReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bzl.bis.task.DeleteTaskIdReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.com.bzl.bis.task.DeleteTaskIdReq.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bzl.bis.task.DeleteTaskIdReq} returns this
 */
proto.com.bzl.bis.task.DeleteTaskIdReq.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bzl.bis.task.CommonResult.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bzl.bis.task.CommonResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bzl.bis.task.CommonResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bzl.bis.task.CommonResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    msg: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bzl.bis.task.CommonResult}
 */
proto.com.bzl.bis.task.CommonResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bzl.bis.task.CommonResult;
  return proto.com.bzl.bis.task.CommonResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bzl.bis.task.CommonResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bzl.bis.task.CommonResult}
 */
proto.com.bzl.bis.task.CommonResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bzl.bis.task.CommonResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bzl.bis.task.CommonResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bzl.bis.task.CommonResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bzl.bis.task.CommonResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.com.bzl.bis.task.CommonResult.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bzl.bis.task.CommonResult} returns this
 */
proto.com.bzl.bis.task.CommonResult.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string msg = 2;
 * @return {string}
 */
proto.com.bzl.bis.task.CommonResult.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.com.bzl.bis.task.CommonResult} returns this
 */
proto.com.bzl.bis.task.CommonResult.prototype.setMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.bzl.bis.task.PageData.prototype.toObject = function(opt_includeInstance) {
  return proto.com.bzl.bis.task.PageData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.bzl.bis.task.PageData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bzl.bis.task.PageData.toObject = function(includeInstance, msg) {
  var f, obj = {
    pageNo: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 2, 0),
    total: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.bzl.bis.task.PageData}
 */
proto.com.bzl.bis.task.PageData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.bzl.bis.task.PageData;
  return proto.com.bzl.bis.task.PageData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.bzl.bis.task.PageData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.bzl.bis.task.PageData}
 */
proto.com.bzl.bis.task.PageData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPageNo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPageSize(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.bzl.bis.task.PageData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.bzl.bis.task.PageData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.bzl.bis.task.PageData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.bzl.bis.task.PageData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPageNo();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getTotal();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional uint64 page_no = 1;
 * @return {number}
 */
proto.com.bzl.bis.task.PageData.prototype.getPageNo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bzl.bis.task.PageData} returns this
 */
proto.com.bzl.bis.task.PageData.prototype.setPageNo = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 page_size = 2;
 * @return {number}
 */
proto.com.bzl.bis.task.PageData.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bzl.bis.task.PageData} returns this
 */
proto.com.bzl.bis.task.PageData.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 total = 3;
 * @return {number}
 */
proto.com.bzl.bis.task.PageData.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.com.bzl.bis.task.PageData} returns this
 */
proto.com.bzl.bis.task.PageData.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


goog.object.extend(exports, proto.com.bzl.bis.task);
